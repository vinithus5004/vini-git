#BlueJ class context
comment0.target=Notebook
comment0.text=\r\n\ A\ class\ to\ maintain\ an\ arbitrarily\ long\ list\ of\ notes.\r\n\ Notes\ are\ numbered\ for\ external\ reference\ by\ a\ human\ user.\r\n\ In\ this\ version,\ note\ numbers\ start\ at\ 0.\r\n\ \r\n\ @author\ David\ J.\ Barnes\ and\ Michael\ Kolling.\r\n\ @version\ 2008.03.30\r\n
comment1.params=
comment1.target=Notebook()
comment1.text=\r\n\ Perform\ any\ initialization\ that\ is\ required\ for\ the\r\n\ notebook.\r\n
comment2.params=note
comment2.target=void\ storeNote(java.lang.String)
comment2.text=\r\n\ Store\ a\ new\ note\ into\ the\ notebook.\r\n\ @param\ note\ The\ note\ to\ be\ stored.\r\n
comment3.params=noteNumber
comment3.target=void\ removeNote(int)
comment3.text=\r\n\ Remove\ uma\ nota\ do\ bloco\ de\ notas,\ de\ acordo\ com\r\n\ o\ \u00EDndice\ fornecido.\r\n\ @param\ noteNumer\ O\ \u00EDndice\ da\ anota\u00E7\u00E3o\ que\ deseja\ remover\r\n\ da\ lista\ de\ anota\u00E7\u00F5es.\r\n
comment4.params=searchString
comment4.target=void\ removeAllNotesWith(java.lang.String)
comment4.text=\r\n\ Remove\ todas\ \r\n\ \r\n
comment5.params=
comment5.target=int\ numberOfNotes()
comment5.text=\r\n\ @return\ The\ number\ of\ notes\ currently\ in\ the\ notebook.\r\n
comment6.params=noteNumber
comment6.target=void\ showNote(int)
comment6.text=\r\n\ Show\ a\ note.\r\n\ @param\ noteNumber\ The\ number\ of\ the\ note\ to\ be\ shown.\r\n
comment7.params=searchString
comment7.target=void\ search(java.lang.String)
comment7.text=\r\n\ Imprime\ a\ primeira\ nota\ que\ cont\u00E9m\ a\ String\ de\ pesquisa.\r\n\ @param\ A\ String\ a\ ser\ pesquisada\r\n
comment8.params=
comment8.target=void\ listNotes()
comment8.text=\r\n\ Lista\ todas\ as\ anota\u00E7\u00F5es\ e\ o\ seu\ respectivo\ \u00EDndice.\r\n
numComments=9
